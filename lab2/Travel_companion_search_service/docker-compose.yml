services:
  auth_db:
    image: postgres:13
    command: postgres -p 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=practical-proj
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=companion_search
      - PGPORT=5432
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U practical-proj -d companion_search"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  users_db:
    image: postgres:13
    command: postgres -p 5433
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_USER=practical-proj
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=companion_search
      - PGPORT=5433
    volumes:
      - users_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U practical-proj -d companion_search"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  auth_service:
    build: ./auth_service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://practical-proj:1@auth_db:5432/companion_search
      - SECRET_KEY=test-secret-key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=1000
    depends_on:
      auth_db:
        condition: service_healthy
    networks:
      - app-network
    links:
      - geopoints_db

  geopoints_db:
    image: mongo:latest
    hostname: geopoints_mongodb
    environment:
      - MONGO_INITDB_DATABASE=geopoints_db
      - MONGO_INITDB_ROOT_USERNAME=practical-proj
      - MONGO_INITDB_ROOT_PASSWORD=1
    ports:
      - 27017:27017
    networks:
      - app-network 

  geo_points_service:
    build: ./geo_points_service
    ports:
      - "8001:8001"
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000
      - DATABASE_URL=mongodb://practical-proj:1@geopoints_mongodb:27017/?authSource=admin
    depends_on: 
      auth_service:
        condition: service_started
    networks:
      - app-network

  trips_service:
    build: ./trips_service
    ports:
      - "8002:8002"
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000
      - GEO_POINTS_URL=http://geo_points_service:8001
      - USER_SERVICE_URL=http://user_service:8003
    depends_on: 
      auth_service:
        condition: service_started
      geo_points_service:
        condition: service_started
      user_service:
        condition: service_started
    networks:
      - app-network

  user_service:
    build: ./user_service
    ports:
      - "8003:8003"
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000
      - DATABASE_URL=postgresql://practical-proj:1@users_db:5433/companion_search
    depends_on: 
      auth_service:
        condition: service_started
      users_db:
        condition: service_healthy
    networks:
      - app-network

volumes:
  auth_postgres_data:
  users_postgres_data:

networks:
  app-network: